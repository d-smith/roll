#%RAML 0.8
title: Roll developer portal services
version: 1
schemas:
  - Developer: !include schemas/developer.json
    Developers: !include schemas/developers.json
    Errors: !include schemas/errors.json
    Applications: !include schemas/applications.json
    Application: !include schemas/application.json
    CreateApp: !include schemas/createapp.json
    AppCreated: !include schemas/appcreated.json
baseUri: http://localhost:3000
/v1/developers:
  get:
    description: |
      Retrieve a list of developers registered with Roll. Note that a full list is available only to the roll application 'user' - all other callers receive a single 
      element list containing their details.
    headers:
      Authorization:
        description: |
          Used to convey a bearer token obtained via one of the roll OAuth 2 flows
    responses:
      200:
        body:
          application/json:
            schema: Developers
      500:
        body:
          application/json:
            schema: Errors
      
    
/v1/developers/{email}:
  get:
    description: |
      Retrieve the developer definition associated with the given email address.
    headers:
      Authorization:
        description: OAuth2 Bearer token
    responses:
      200:
        body:
          application/json:
            schema: Developer
      404:
        body:
          application/json:
            schema: Errors
      500:
        body:
          application/json:
            schema: Errors
  put:
    description: |
      Register a developer with their email address as their identifier. Note the EMail
      property in the Developer object is ignored - the email from the full resource
      URI is considered authoritative for this operation.
    headers:
      Authorization:
        description: OAuth 2 Bearer token
    body:      
      application/json:
        schema: Developer
    responses:
      204:
      400:
        body:
          application/json:
            schema: Errors
      500:
        body:
          application/json:
            schema: Errors
            
/v1/applications:
  get:
    description: |
      Retrieve the list of applications registered with the developer portal. For the 
      roll application 'user', all application definitions are returned. In all
      other cases, the applications associated with that user are returned.
    headers:
      Authorization:
        description: OAuth2 Bearer token
    responses:
      200:
        body:
          application/json:
            schema: Applications
      500:
        body:
          application/json:
            schema: Errors
      
  post:
    description: |
      Create a new application definition associated with the user identified by the 
      accompanying bearer token. The client id created by the systen for the created
      application definition is returned to the caller.
    body:
      application/json:
        schema: Application
    responses:
      200:
        body:
          application/json:
            schema: AppCreated
      400:
        body:
          application/json:
            schema: Errors
      409:
        body:
          application/json:
            schema: Errors
      500:
        body:
          application/json:
            schema: Errors
      
        
/v1/applications/{client_id}:
  get:
    description: |
      Retrieve the application definition associated with the client_id. Only the roll
      application user may retrieve any application definition, all other users are
      restricted to retrieving applications registered to their identity.
  put:
    description: |
      Update the application definition associated with the given client_id.
  
        
/v1/jwtflowverts/{client_id}:
  put:
    description: |
      The owner associated with the given application client_id may PUT a certificate
      to the resource, from which the public key will be extracted and used to verify
      token signatures in the OAuth2 JWT flow.
  get:
    description: |
      Retrieve the public key associated with the given client id.
          
            
            
          

    
